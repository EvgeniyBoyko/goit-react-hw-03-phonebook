{"version":3,"sources":["components/Section/Section.jsx","components/PhoneBook/initialState.js","components/ContactForm/fields.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/PhoneBook/PhoneBook.jsx","App.js","index.js"],"names":["Section","title","children","initialState","contacts","id","name","number","filter","fields","type","required","ContactForm","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","onSubmit","props","reset","this","onChange","pattern","Component","ContactList","onDelete","contactElement","contact","toLowerCase","includes","map","onClick","defaultProps","Filter","changeFilter","PhoneBook","addContact","newContact","shortid","generate","find","alert","newContacts","push","idx","newList","splice","contactsList","JSON","parse","localStorage","getItem","stringify","setItem","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99d040bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <div>\r\n            <h2> {title} </h2>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n \r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Section;\r\n\r\n","export const initialState = {\r\n    contacts: [\r\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n    name: '',\r\n    number: ''\r\n};","export const fields = {\r\n  name: {\r\n    type: \"text\",\r\n    name: \"name\",\r\n    title: \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n    required: true,\r\n  },\r\n  number: {\r\n    type: \"tel\",\r\n    name: \"number\",\r\n    title: \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\r\n    required: true,\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport {initialState} from '../PhoneBook/initialState';\r\nimport { fields } from './fields';\r\n\r\nclass ContactForm extends Component {\r\n    state = { ...initialState };\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { name, number } = this.state;\r\n        const { onSubmit } = this.props;\r\n        onSubmit(name, number);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: \"\",\r\n            number: \"\",\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        const {handleSubmit, handleChange} = this\r\n        return (\r\n             <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    <p>Name</p>\r\n                    <input {...fields.name}\r\n                        onChange={handleChange}\r\n                        value={name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" />\r\n                </label>\r\n                <label>\r\n                    <p>Number</p>\r\n                    <input {...fields.number}\r\n                        onChange={handleChange}\r\n                        value={number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\" />\r\n                </label>\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, filter, onDelete }) => {\r\n  const filterContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  const contactElement = filterContacts.map(({ name, number, id }) => (\r\n    <li key={id}>\r\n      <p>{name}: {number} <button type=\"button\" onClick={() => onDelete(name)}>Delete</button></p>\r\n    </li>\r\n  ));\r\n\r\n  return <ul>{contactElement}</ul>;\r\n};\r\n\r\nContactList.defaultProps = {\r\n  onDelete: () => {},\r\n  contacts: [],\r\n  filter: () => {}\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n}\r\n\r\nexport default ContactList;\r\n ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        onChange={changeFilter}\r\n        type=\"text\"\r\n        value={filter}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  changeFilter: () => {}\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.func,\r\n  changeFilter: PropTypes.func\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport Section from '../Section';\r\nimport ContactForm from '../ContactForm';\r\nimport ContactList from '../ContactList';\r\nimport Filter from '../Filter';\r\n\r\nimport { initialState } from \"./initialState\";\r\n\r\nclass PhoneBook extends Component {\r\n\r\n    state = { ...initialState };\r\n\r\n    addContact = (name, number) => {\r\n        const newContact = {\r\n            id: shortid.generate(),\r\n            name,\r\n            number,\r\n        };\r\n        const { contacts } = this.state;\r\n\r\n        const result = contacts.find(\r\n            contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n        );\r\n        if (result) {\r\n            alert(`${name} is already in contacts`);\r\n            return {\r\n                contacts\r\n            }\r\n        } else {\r\n            const newContacts = [...contacts];\r\n            newContacts.push(newContact);\r\n\r\n            this.setState({ contacts: newContacts });\r\n        }\r\n    };\r\n\r\n    onDelete = (idx) => {\r\n        this.setState(({ contacts }) => {\r\n            const newList = [...contacts];\r\n            newList.splice(idx, 1);\r\n            return {\r\n                contacts: newList,\r\n            }\r\n        });\r\n    };\r\n\r\n    changeFilter = e => {\r\n        this.setState({ filter: e.currentTarget.value });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const contactsList = JSON.parse(localStorage.getItem('contacts'));\r\n        this.setState({\r\n            contacts: contactsList || [],\r\n        });\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        const { contacts } = this.state;\r\n        const contactsList = JSON.stringify(contacts);\r\n        localStorage.setItem('contacts', contactsList);\r\n    };\r\n\r\n    render() {\r\n        const { contacts, filter } = this.state;\r\n        const { addContact, onDelete, changeFilter } = this;\r\n\r\n        return (\r\n            <>\r\n                <Section title={'PhoneBook'}>\r\n                    <ContactForm onSubmit={addContact} />\r\n                </Section>\r\n                <Section title={'Contacts'}>\r\n                    <Filter value={filter} changeFilter={changeFilter}/>\r\n                    <ContactList\r\n                        contacts={contacts}\r\n                        filter={filter}\r\n                        onDelete={onDelete} />\r\n                </Section>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PhoneBook;\r\n","import './App.css';\nimport PhoneBook from './components/PhoneBook';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PhoneBook />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}